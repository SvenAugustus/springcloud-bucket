server:
  port: 8761 #服务端口

spring:
  application:
    name: eureka-server #指定服务名
#  security:
#      user:
#        name: root
#        password: root123

eureka:
  client:
    # 是否将自己注册到Eureka Server,默认为true，由于当前就是server，故而设置成false，表明该服务不会向eureka注册自己的信息
    register-with-eureka: true
    # 是否从eureka server获取注册信息，由于单节点，不需要同步其他节点数据，用false
    fetch-registry: true
    serviceUrl: #Eureka客户端与Eureka服务端的交互地址，高可用状态配置对方的地址，单机状态配置自己（如果不配置则默认本机8761端口）
      defaultZone: http://localhost:8761/eureka/
  #      defaultZone: http://root:root123@localhost:8761/eureka/
  server:
    # 是否开启自我保护模式，看微服务的数量而定
    enable-self-preservation: false
    # 自我保护阈值
    renewal-percent-threshold: 0.85
    # 服务注册表清理间隔（单位毫秒，默认是60*1000）
    # 剔除服务时间间隔    InstanceRegistry#openForTraffic > AbstractInstanceRegistry#postInit, evictionTimer
    eviction-interval-timer-in-ms: 1000
    # 关闭从readOnly读注册表  ->ResponseCacheImpl
    use-read-only-response-cache: false
    # readWrite 和 readOnly 同步时间间隔。
    response-cache-update-interval-ms: 1000
    response-cache-auto-expiration-in-seconds: 10
  instance:
    # 服务名
    virtual-host-name: ${spring.application.name}
#    hostname: eureka01
